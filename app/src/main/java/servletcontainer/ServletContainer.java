/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package servletcontainer;

import java.io.File;
import java.net.MalformedURLException;
import java.net.URL;
import java.net.URLClassLoader;
import java.util.ArrayList;
import java.util.List;

public class ServletContainer {

    final private ServletManager servletManager;
    public ServletContainer() {
        servletManager = new ServletManager();
    }

    public void servletScan() {
        File appFolder = new File("../resources");
        File[] apps = appFolder.listFiles();

        List<URL> folderURLs = new ArrayList<>();
        List<String> classNames = new ArrayList<>();

        for (File app: apps)
            folderURLs.addAll(getFolderURLs(app));

        for (File app: apps)
            classNames.addAll(getclassNames(app, app.getName()));

        URL[] urls = folderURLs.toArray(new URL[0]);
        ClassLoader cl = new URLClassLoader(urls);

        for (var clsName: classNames) {
            System.out.println(clsName);
            try {
                cl.loadClass(clsName);
            } catch (ClassNotFoundException e) {
                throw new RuntimeException(e);
            }
        }
    }

    private List<URL> getFolderURLs(File folder) {
        List<URL> folderNames = new ArrayList<>();
        try {
            folderNames.add(folder.toURI().toURL());
        } catch (MalformedURLException e) {
            throw new RuntimeException(e);
        }

        File[] files = folder.listFiles();
        for (File file : files)
            if (file.isDirectory())
                folderNames.addAll(getFolderURLs(file));

        return folderNames;
    }

    private List<String> getclassNames(File folder, String packageName) {
        List<String> classNames = new ArrayList<>();

        File[] files = folder.listFiles();
        for (File file : files) {
            if (file.isDirectory()) {
                classNames.addAll(getclassNames(file, packageName + "." + file.getName()));
            } else if (file.isFile() && file.getName().endsWith(".class")) {
                String className = file.getName().substring(0, file.getName().lastIndexOf("."));
                classNames.add(packageName + "." + className);
            }
        }

        return classNames;
    }
}
